pipeline {
  agent {
    kubernetes {
      yaml """
kind: Pod
spec:
  containers:
  - name: kaniko
    image: gcr.io/kaniko-project/executor:debug
    imagePullPolicy: Always
    command:
    - sleep
    args:
    - 9999999
    volumeMounts:
      - name: jenkins-docker-cfg
        mountPath: /kaniko/.docker
  - name: git
    image: alpine/git
    command:
    - sleep
    args:
    - 9999999
  - name: trivy
    image: aquasec/trivy:latest
    imagePullPolicy: Always
    command:
    - sleep
    args:
    - 9999999
  volumes:
  - name: jenkins-docker-cfg
    projected:
      sources:
      - secret:
          name: docker-credentials
          items:
            - key: .dockerconfigjson
              path: config.json
"""
    }
  }
  environment {
    DOCKER_REPO = 'berluseden/helloworld-frontend'
    DOCKER_TAG = 'latest'
  }
  stages {
    stage('Checkout') {
      steps {
        container('git') {
          sh '''
            git clone https://github.com/berluseden/Prueba-Tecnica.git
            cd Prueba-Tecnica/Frontend/helloworld
          '''
        }
      }
    }
    stage('Build with Kaniko') {
      steps {
        container('kaniko') {
          sh '''#!/busybox/sh
            /kaniko/executor --context `pwd`/Prueba-Tecnica/Frontend/helloworld --dockerfile `pwd`/Prueba-Tecnica/Frontend/helloworld/Dockerfile --destination ${DOCKER_REPO}:${DOCKER_TAG}
          '''
        }
      }
    }
    stage('Scan with Trivy') {
      steps {
        container('trivy') {
          sh '''#!/bin/sh
            trivy image ${DOCKER_REPO}:${DOCKER_TAG}
          '''
        }
      }
    }
    stage('Push to Docker Hub') {
      steps {
        container('kaniko') {
          sh '''#!/busybox/sh
            /kaniko/executor --context `pwd`/Prueba-Tecnica/Frontend/helloworld --dockerfile `pwd`/Prueba-Tecnica/Frontend/helloworld/Dockerfile --destination ${DOCKER_REPO}:${DOCKER_TAG} --push
          '''
        }
      }
    }
  }
}
